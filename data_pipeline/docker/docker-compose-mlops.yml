version: '3.8'

services:
  # 1️⃣ Prefect (워크플로 관리)
  prefect:
    build: ./prefect
    image: prefecthq/prefect-custom:2.14-python3.9
    container_name: prefect
    restart: unless-stopped
    ports:
      - "4200:4200"
    volumes:
      - ../../data_pipeline:/app/data_pipeline
    environment:
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://progress:progress@progress-db/prefect_db
    networks:
      - elk
    command: >
      bash -c '
        if prefect server database upgrade --check | grep -q "Upgrade required"; then
          echo "✅ Prefect DB upgrade required. Proceeding with upgrade..."
          yes | prefect server database upgrade
        else
          echo "✅ Prefect DB is up to date. Skipping upgrade."
        fi &&
        prefect server start --host 0.0.0.0 --log-level info
      '

    # docker exec -it prefect /bin/bash
    # prefect worker start --pool docker-pool
    # cd data_pipeline/ml_pipeline/prefect
    # prefect deploy -n sportsdrink-ml-deploy     # n n
    # prefect deployment ls
    # prefect deployment delete 'SportsDrink ML Pipeline/sportsdrink-ml-deploy'

  # 2️⃣ Prefect Agent (Flow 실행)
  prefect-agent:
    build: ./prefect
    image: prefecthq/prefect-agent-custom:2.14-python3.9
    container_name: prefect-agent
    depends_on:
      - prefect
    command: ["prefect", "agent", "start", "-q", "default"]
    environment:
      - PREFECT_API_URL=http://prefect:4200/api
      - PREFECT_AGENT_NAME=prefect-agent
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000      
    volumes:                               
      - ../../data_pipeline:/app/data_pipeline    
      - ../../data_pipeline/logs/prefect_logs:/app/data_pipeline/logs
    networks:
      - elk

  # 3️⃣ MinIO (로컬 S3 스토리지)
  minio:
    image: minio/minio:RELEASE.2023-12-23T07-19-11Z
    container_name: minio
    ports:
      - "9000:9000"   # API 포트
      - "9001:9001"   # 콘솔 포트 (웹 UI)
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - elk

  # 4️⃣ MLflow (모델 관리 및 실험 추적)
  mlflow:
    build: ./mlflow
    image: ghcr.io/mlflow/mlflow-custom:v2.9.2
    container_name: mlflow
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - BACKEND_STORE_URI=postgresql+psycopg2://progress:progress@progress-db/mlflow_db
      - ARTIFACT_ROOT=s3://mlflow-artifacts
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - PREFECT_AGENT_NAME=ml-agent
    depends_on:
      - minio
    networks:
      - elk

networks:
  elk:  
    driver: bridge

volumes:
  minio_data:


# 2
# docker-compose -f docker-compose-mlops.yml down              # stop prefect
# docker-compose -f docker-compose-mlops.yml build --no-cache
# docker-compose -f docker-compose-mlops.yml up -d             # --build prefect
